
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mahmoud
 */

public class SignUpGUI extends javax.swing.JFrame implements ClientInterface{
     private AppInterface app ;
     ManagerInterface manager;
    /**
     * Creates new form SignUp
     */
    public SignUpGUI() throws RemoteException ,  NotBoundException  {
        initComponents();
        this.setLocation(400,200);
        this.setTitle("SignUp");
        getTheService();
        UnicastRemoteObject.exportObject(this, 0);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0); 
            }
        });
    }

      private void getTheService() throws RemoteException, NotBoundException{
        PropertiesDevice pd = PropertiesDevice.getDevice();
        Registry reg = LocateRegistry.getRegistry(pd.getIp(),1099);
        app = (AppInterface) reg.lookup(AppInterface.APP_NAME);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameInput = new javax.swing.JTextField();
        SecondNameLabel = new javax.swing.JLabel();
        secondNameInput = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordInput = new javax.swing.JTextField();
        oldPasswordLabel = new javax.swing.JLabel();
        oldPasswordInput = new javax.swing.JTextField();
        signUPButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel1.setText("Tourizm App");

        firstNameLabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        firstNameLabel.setText("first name:");

        firstNameInput.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N

        SecondNameLabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        SecondNameLabel.setText("last name:");

        secondNameInput.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N

        passwordLabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        passwordLabel.setText("new password:");

        passwordInput.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        passwordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordInputActionPerformed(evt);
            }
        });

        oldPasswordLabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        oldPasswordLabel.setText("old password:");

        oldPasswordInput.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        oldPasswordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldPasswordInputActionPerformed(evt);
            }
        });

        signUPButton.setBackground(new java.awt.Color(0, 153, 204));
        signUPButton.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        signUPButton.setForeground(new java.awt.Color(255, 255, 255));
        signUPButton.setText("Become a member");
        signUPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUPButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(0, 153, 204));
        backButton.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(signUPButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameLabel)
                                    .addComponent(SecondNameLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(passwordLabel)
                                            .addComponent(oldPasswordLabel))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passwordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                    .addComponent(secondNameInput)
                                    .addComponent(oldPasswordInput)
                                    .addComponent(firstNameInput, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(63, 63, 63))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SecondNameLabel)
                    .addComponent(secondNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldPasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oldPasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(signUPButton)
                .addGap(18, 18, 18)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordInputActionPerformed

    private void signUPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUPButtonActionPerformed
        // TODO add your handling code here:
        String firstName = firstNameInput.getText();
        String secondName = secondNameInput.getText();
        String password = passwordInput.getText();
        String oldPassword = oldPasswordInput.getText();
        double account = 0.0;
        double percent = 0.0;
//        double percent = Double.parseDouble(percentInput.getText());
        
        if(firstName.isEmpty() || secondName.isEmpty() || password.isEmpty() || oldPassword.isEmpty()){
                 JOptionPane.showMessageDialog(this,"The input field must be not empty");
             }
        else{
         try {
             manager = Manager.getManager();
             manager.setFirstName(firstName);
             manager.setSecondName(secondName);
             manager.setPassword(password);
             manager.setAccount(account);
             manager.setPercent(percent);
             PropertiesDevice pd = PropertiesDevice.getDevice();
             int result =  app.SignUp(manager.getFirstName(),manager.getSecondName(),manager.getPassword(),manager.getAccount(),manager.getPercent(),oldPassword,this);
             if(result > 0){
                 new ManagementGUI().setVisible(true);
                 app.sendManager(manager.getFirstName(), manager.getSecondName(), manager.getAccount(), manager.getPercent());
                 app.logout(this);
                 this.dispose();
             }else{
                 JOptionPane.showMessageDialog(this,"Can't sign up");
             }
         } catch (RemoteException ex) {
             Logger.getLogger(SignUpGUI.class.getName()).log(Level.SEVERE, null, ex);
         }  catch (NotBoundException ex) {  
                Logger.getLogger(SignUpGUI.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }
    }//GEN-LAST:event_signUPButtonActionPerformed

    private void oldPasswordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldPasswordInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oldPasswordInputActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
         try {
             // TODO add your handling code here:
             new HomeGUI().setVisible(true);
         } catch (RemoteException ex) {
             Logger.getLogger(SignUpGUI.class.getName()).log(Level.SEVERE, null, ex);
         } catch (NotBoundException ex) {
             Logger.getLogger(SignUpGUI.class.getName()).log(Level.SEVERE, null, ex);
         }
         try {
             app.logout(this);
         } catch (RemoteException ex) {
             Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
         }
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SignUpGUI().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(SignUpGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NotBoundException ex) {
                    Logger.getLogger(SignUpGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SecondNameLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField firstNameInput;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField oldPasswordInput;
    private javax.swing.JLabel oldPasswordLabel;
    private javax.swing.JTextField passwordInput;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField secondNameInput;
    private javax.swing.JButton signUPButton;
    // End of variables declaration//GEN-END:variables
    @Override
    public void recieveManager(String firstName , String secondName , double account , double percent) throws RemoteException{
        manager.setAccount(account);
        manager.setPercent(percent);
        manager.setFirstName(firstName);
        manager.setSecondName(secondName);
    }

 

    @Override
   public void reciveIdPhotographer(PhotogragherInterface ph,int selectedIndex) throws RemoteException {        
       
    }

   @Override
    public void reciveMessage(String message) throws RemoteException {
   
    }

    @Override
    public void recivePhotographers(ArrayList<PhotogragherInterface> phs) throws RemoteException {
    }

    @Override
    public void reciveGuides(ArrayList<TourGuidesInterface> gus) throws RemoteException {
    }

    @Override
    public void reciveValueCoin(double value, String type) throws RemoteException {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void reciveSales(ArrayList<SalesInterface> sales) throws RemoteException {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void reciveOutlayList(ArrayList<Outlay> outlayList) throws RemoteException {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
